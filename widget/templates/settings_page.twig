
{# Settings page template for widget configuration #}
<div class="mensagens-futuras-settings">
  <div class="page-header">
    <h1 class="page-title">{{ i18n.widget.name }} - Configurações</h1>
    <p class="page-description">
      Configure o comportamento do widget de mensagens futuras.
    </p>
  </div>

  <div class="settings-form">
    <form id="widget-settings-form">
      <div class="form-section">
        <h3>Configurações Gerais</h3>
        
        <div class="form-field">
          <label for="timezone">{{ i18n.settings.timezone }}</label>
          <input type="text" 
                 id="timezone" 
                 name="timezone" 
                 placeholder="America/Sao_Paulo"
                 value="America/Sao_Paulo" />
          <small class="field-help">Exemplos: America/Sao_Paulo, America/New_York, Europe/Madrid, UTC</small>
        </div>

        <div class="form-field">
          <label for="polling_interval">{{ i18n.settings.polling_interval }}</label>
          <select id="polling_interval" name="polling_interval">
            <option value="1">1 minuto</option>
            <option value="5">5 minutos</option>
            <option value="10" selected>10 minutos</option>
            <option value="30">30 minutos</option>
          </select>
          <small class="field-help">Frequência de verificação de mensagens</small>
        </div>

        <div class="form-field">
          <label for="notifications">{{ i18n.settings.notifications }}</label>
          <input type="text" 
                 id="notifications" 
                 name="notifications" 
                 placeholder="true"
                 value="true" />
          <small class="field-help">Digite "true" para ativar ou "false" para desativar</small>
        </div>

        <div class="form-field">
          <label for="debug_mode">{{ i18n.settings.debug_mode }}</label>
          <input type="text" 
                 id="debug_mode" 
                 name="debug_mode" 
                 placeholder="false"
                 value="false" />
          <small class="field-help">Digite "true" para ativar ou "false" para desativar</small>
        </div>
      </div>

      <div class="form-actions">
        <button type="submit" class="btn btn-primary">Salvar Configurações</button>
        <button type="button" class="btn btn-secondary" id="reset-settings">Restaurar Padrões</button>
      </div>
    </form>
  </div>

  <div class="empty-state">
    <div class="empty-state-icon">⚙️</div>
    <h3>Configurações do Widget</h3>
    <p>Use este painel para configurar o comportamento do widget de mensagens futuras.</p>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Load saved settings
  loadSettings();
  
  // Handle form submission
  document.getElementById('widget-settings-form').addEventListener('submit', function(e) {
    e.preventDefault();
    if (validateSettings()) {
      saveSettings();
    }
  });
  
  // Handle reset button
  document.getElementById('reset-settings').addEventListener('click', function() {
    resetToDefaults();
  });
});

function validateSettings() {
  const pollingInterval = document.getElementById('polling_interval').value;
  const timezone = document.getElementById('timezone').value;
  const notifications = document.getElementById('notifications').value.toLowerCase();
  const debugMode = document.getElementById('debug_mode').value.toLowerCase();
  
  // Validate polling interval
  const validIntervals = ['1', '5', '10', '30'];
  if (!validIntervals.includes(pollingInterval)) {
    alert('Intervalo de verificação deve ser: 1, 5, 10 ou 30 minutos');
    return false;
  }
  
  // Validate timezone (basic validation)
  if (!timezone || timezone.trim() === '') {
    alert('Fuso horário é obrigatório');
    return false;
  }
  
  // Validate boolean fields
  if (notifications !== 'true' && notifications !== 'false') {
    alert('Campo de notificações deve ser "true" ou "false"');
    return false;
  }
  
  if (debugMode !== 'true' && debugMode !== 'false') {
    alert('Campo de modo de depuração deve ser "true" ou "false"');
    return false;
  }
  
  return true;
}

function loadSettings() {
  // Load settings from widget storage
  const settings = AMOCRM.widgets.system.getSettings();
  if (settings) {
    if (settings.timezone) {
      document.getElementById('timezone').value = settings.timezone;
    }
    if (settings.polling_interval) {
      document.getElementById('polling_interval').value = settings.polling_interval;
    }
    if (settings.notifications !== undefined) {
      document.getElementById('notifications').value = settings.notifications;
    }
    if (settings.debug_mode !== undefined) {
      document.getElementById('debug_mode').value = settings.debug_mode;
    }
  }
}

function saveSettings() {
  const settings = {
    timezone: document.getElementById('timezone').value,
    polling_interval: document.getElementById('polling_interval').value,
    notifications: document.getElementById('notifications').value.toLowerCase(),
    debug_mode: document.getElementById('debug_mode').value.toLowerCase()
  };
  
  AMOCRM.widgets.system.setSettings(settings);
  
  // Show success message
  alert('Configurações salvas com sucesso!');
}

function resetToDefaults() {
  document.getElementById('timezone').value = 'America/Sao_Paulo';
  document.getElementById('polling_interval').value = '10';
  document.getElementById('notifications').value = 'true';
  document.getElementById('debug_mode').value = 'false';
}
</script>

<style>
.mensagens-futuras-settings {
  padding: 20px;
  max-width: 800px;
  margin: 0 auto;
}

.page-header {
  margin-bottom: 30px;
  border-bottom: 1px solid #e6e6e6;
  padding-bottom: 20px;
}

.page-title {
  font-size: 24px;
  font-weight: 600;
  color: #333;
  margin: 0 0 10px 0;
}

.page-description {
  color: #666;
  margin: 0;
}

.settings-form {
  background: #f9f9f9;
  border: 1px solid #e6e6e6;
  border-radius: 6px;
  padding: 25px;
  margin-bottom: 30px;
}

.form-section h3 {
  margin: 0 0 20px 0;
  color: #333;
  font-size: 18px;
}

.form-field {
  margin-bottom: 20px;
}

.form-field label {
  display: block;
  margin-bottom: 5px;
  font-weight: 500;
  color: #333;
}

.form-field select,
.form-field input[type="text"] {
  width: 100%;
  max-width: 300px;
  padding: 8px 12px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 14px;
}

.form-field input[type="text"]:focus,
.form-field select:focus {
  border-color: #007cba;
  outline: none;
  box-shadow: 0 0 0 2px rgba(0, 124, 186, 0.2);
}

.field-help {
  display: block;
  margin-top: 5px;
  font-size: 12px;
  color: #666;
  font-style: italic;
}

.form-actions {
  margin-top: 25px;
  padding-top: 20px;
  border-top: 1px solid #e6e6e6;
}

.btn {
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  margin-right: 10px;
}

.btn-primary {
  background-color: #007cba;
  color: white;
}

.btn-secondary {
  background-color: #6c757d;
  color: white;
}

.btn:hover {
  opacity: 0.9;
}

.empty-state {
  text-align: center;
  padding: 40px;
  color: #666;
}

.empty-state-icon {
  font-size: 48px;
  margin-bottom: 20px;
}
</style>
